name: Run Playwright Tests
description: 'Runs the Playwright tests for the eShopOnWeb project'

inputs:
  test-type:
    description: 'The type of tests to run'
    required: true
  dotnet-version:
    description: 'The version of the .Net Core SDK to use'
    required: true
  test-artifact-name:
    description: 'The name of the artifact to publish'
    required: true
  test-project-name:
    description: 'The name of the project to run the tests for'
    required: true
  test-project-pattern:
    description: 'The pattern to use to find the test projects'
    required: true
  test-filter-criteria:
    description: 'The filter criteria to use to run the tests'
    required: false
  browser-name:
    description: 'The name of the browser to use'
    required: true
  channel:
    description: 'The channel of the browser to use'
  headless:
    description: 'Whether to run the browser in headless mode'
    required: true

runs:
  using: "composite"
  steps:

    - name: Download ${{ inputs.test-artifact-name }} Artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.test-artifact-name }}
        path: artifacts
        pattern: ${{ inputs.test-project-pattern }} 

    - name: 'Set Dotnet Version ${{ inputs.dotnet-version }}'
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet-version }} 

    - uses: actions/setup-node@v4
      with:
        node-version: latest

    - name: Make Node binary executable
      shell: bash
      run: chmod +x ./artifacts/.playwright/node/linux-x64/node

    - name: Ensure browsers are installed
      shell: pwsh
      working-directory: artifacts
      run: |
        pwsh playwright.ps1 install --with-deps

    - name: Run your tests
      shell: bash
      working-directory: artifacts
      run: dotnet test *Tests.dll --logger "trx;LogFileName=test_results_${{ inputs.test-artifact-name }}.trx" --results-directory ${{ github.workspace }}/TestResults ${{ inputs.test-filter-criteria }} -- Playwright.BrowserName=${{ inputs.browser-name }} Playwright.LaunchOptions.Channel=${{ inputs.channel }}

    - name: List folders
      shell: bash 
      working-directory: ${{ github.workspace }}
      run: ls -la

    - name: List folders artifacts
      shell: bash 
      working-directory: ${{ github.workspace }}
      run: ls -la

    - name: Publish Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test_results_${{ inputs.test-type }}
        path: ${{ github.workspace }}/TestResults

    - name : Publish playwright traces 
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-traces-${{ inputs.test-type }}
        path: ${{ github.workspace }}/playwright-traces
        if-no-files-found: ignore
    
    - uses: dorny/test-reporter@v1
      with:
        artifact: test_results_${{ inputs.test-type }}
        name: test_results_${{ inputs.test-type }}
        path: '*.trx'
        reporter: dotnet-trx

    

