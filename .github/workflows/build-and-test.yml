name: build-and-test

on:
  push:
    branches: [ "main" ]

env:
  DOTNET_VERSION: '8.x'

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  build_solution:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Solution
        uses: ./.github/actions/build-solution-action
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

  build_web_assets:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Web Assets
        uses: ./.github/actions/build-web-assets-action
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

  build_unit_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Unit Tests
        uses: ./.github/actions/build-tests-action
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          artifact-name: tests_UnitTests
          project-pattern: |
            UnitTests/UnitTests.csproj
  
  build_integration_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Integration Tests
        uses: ./.github/actions/build-tests-action
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          artifact-name: tests_IntegrationTests
          project-pattern: |
            IntegrationTests/IntegrationTests.csproj

  build_public_api_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Public Api Integration Tests
        uses: ./.github/actions/build-tests-action
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          artifact-name: tests_PublicApiIntegrationTests
          project-pattern: |
            PublicApiIntegrationTests/PublicApiIntegrationTests.csproj
    
  build_functional_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Functional Tests
        uses: ./.github/actions/build-tests-action
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          artifact-name: tests_FunctionalTests
          project-pattern: |
            FunctionalTests/FunctionalTests.csproj

  # run_unit_tests:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #   runs-on: ${{ matrix.os }}
  #   timeout-minutes: 20
  #   needs: [ build_solution, build_web_assets, build_unit_tests ]

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Run Unit Tests
  #       uses: ./.github/actions/run-tests-action
  #       with:
  #         dotnet-version: ${{ env.DOTNET_VERSION }}
  #         test-artifact-name: tests_UnitTests
  #         test-project-pattern: |
  #           UnitTests/**/*
  #         test-filter-criteria: ""
    
  # run_integration_tests:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #   runs-on: ${{ matrix.os }}
  #   timeout-minutes: 20
  #   needs: [ build_solution, build_unit_tests, build_integration_tests ]

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Run Integration Tests
  #       uses: ./.github/actions/run-tests-action
  #       with:
  #         dotnet-version: ${{ env.DOTNET_VERSION }}
  #         test-artifact-name: tests_IntegrationTests
  #         test-project-pattern: |
  #           IntegrationTests/**/*
  #         test-filter-criteria: ""

  # run_public_api_integration_tests:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #   runs-on: ${{ matrix.os }}
  #   timeout-minutes: 20
  #   needs: [ build_solution, build_unit_tests, build_public_api_tests ]

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Run Public Api Integration Tests
  #       uses: ./.github/actions/run-tests-action
  #       with:
  #         dotnet-version: ${{ env.DOTNET_VERSION }}
  #         test-artifact-name: tests_PublicApiIntegrationTests
  #         test-project-pattern: |
  #           PublicApiIntegrationTests/**/*
  #         test-filter-criteria: ""

  # run_functional_tests:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #   runs-on: ${{ matrix.os }}
  #   timeout-minutes: 20
  #   needs: [ build_solution, build_unit_tests, build_functional_tests ]

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Run Functional Tests
  #       uses: ./.github/actions/run-tests-action
  #       with:
  #         dotnet-version: ${{ env.DOTNET_VERSION }}
  #         test-artifact-name: tests_FunctionalTests
  #         test-project-pattern: |
  #           FunctionalTests/**/*
  #         test-filter-criteria: ""
  
  run_tests:
    runs-on: [ubuntu-latest]
    timeout-minutes: 20
    needs: [ build_solution, build_unit_tests, build_functional_tests ]
    strategy:
      matrix:
        include:
          - testType: UnitTests
            artifactName: tests_UnitTests
            projectsPattern: '**/*UnitTests.csproj'
          - testType: IntegrationTests
            artifactName: tests_IntegrationTests
            projectsPattern: '**/*IntegrationTests.csproj'
          - testType: PublicApiIntegrationTests
            artifactName: tests_PublicApiIntegrationTests
            projectsPattern: '**/*PublicApiIntegrationTests.csproj'
          - testType: FunctionalTests
            artifactName: tests_FunctionalTests
            projectsPattern: '**/*FunctionalTests.csproj'
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run ${{ matrix.testType }} and Publish Test Results
        uses: ./.github/actions/run-tests-action
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          test-artifact-name: ${{ matrix.artifactName }}
          test-project-pattern: |
            ${{ matrix.projectsPattern }}
          test-filter-criteria: ${{ matrix.testFilterCriteria }}
