name: build-and-test

on:
  push:
    branches: [ "main" ]

env:
  DOTNET_VERSION: '8.x'

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  build_solution:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Solution
        uses: ./.github/actions/build-solution-action
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

  build_web_assets:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Web Assets
        uses: ./.github/actions/build-web-assets-action
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

  build_tests:
    runs-on: [ubuntu-latest]
    timeout-minutes: 20
    strategy:
      matrix:
        include:
          - test-type: UnitTests
            artifact-name: tests_UnitTests
            project-pattern: |
              **/*UnitTests.csproj
          - test-type: IntegrationTests
            artifact-name: tests_IntegrationTests
            project-pattern: | 
              IntegrationTests/IntegrationTests.csproj
          - test-type: PublicApiIntegrationTests
            artifact-name: tests_PublicApiIntegrationTests
            project-pattern: |
              PublicApiIntegrationTests/PublicApiIntegrationTests.csproj
          - test-type: FunctionalTests
            artifact-name: tests_FunctionalTests
            project-pattern: |
              FunctionalTests/FunctionalTests.csproj
          - test-type: SystemTests
            artifact-name: tests_InMemorySystemTests
            project-pattern: |
              NUnit.InProcess.SystemTests/NUnit.InProcess.SystemTests.csproj 
          - test-type: TestContainersSystemTests
            artifact-name: tests_TestContainersSystemTests
            project-pattern: |
              NUnit.TestContainers.InProcess.SystemTests/NUnit.TestContainers.InProcess.SystemTests.csproj 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build ${{ matrix.test-type }} Tests and Publish Test Artifacts
        uses: ./.github/actions/build-tests-action
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          artifact-name: ${{ matrix.artifact-name }}
          project-pattern: |
            ${{ matrix.project-pattern }}
  
  run_tests:
    runs-on: [ubuntu-latest]
    timeout-minutes: 20
    needs: [ build_solution, build_web_assets, build_tests ]
    strategy:
      matrix:
        include:
          - test-type: UnitTests
            artifact-name: tests_UnitTests
            project-pattern: |
              **/*UnitTests.csproj
            test-filter-criteria: ""
          - test-type: IntegrationTests
            artifact-name: tests_IntegrationTests
            project-pattern: | 
              **/*IntegrationTests.csproj
            test-filter-criteria: ""
          - test-type: PublicApiIntegrationTests
            artifact-name: tests_PublicApiIntegrationTests
            project-pattern: |
              **/*PublicApiIntegrationTests.csproj
            test-filter-criteria: ""
          - test-type: FunctionalTests
            artifact-name: tests_FunctionalTests
            project-pattern: |
              **/*FunctionalTests.csproj
            test-filter-criteria: ""
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run ${{ matrix.test-type }} and Publish Test Results
        uses: ./.github/actions/run-tests-action
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          test-artifact-name: ${{ matrix.artifact-name }}
          test-project-pattern: |
            ${{ matrix.project-pattern }}
          test-filter-criteria: ${{ matrix.test-filter-criteria }}

  run_system_tests:
    runs-on: [ubuntu-latest]
    timeout-minutes: 20
    needs: [ build_solution, build_web_assets, build_tests ]
    strategy:
      matrix:
        include:
          - test-type: SystemTests_Chrome
            artifact-name: tests_InMemorySystemTests
            project-name: NUnit.InProcess.SystemTests
            project-pattern: |
              **/*NUnit.InProcess.SystemTests.csproj
            test-filter-criteria: ""
            browser-name: 'chromium'
            channel: 'chrome'
            headless: true
          - test-type: SystemTests_Edge
            artifact-name: tests_InMemorySystemTests
            project-name: NUnit.InProcess.SystemTests
            project-pattern: |
              **/*NUnit.InProcess.SystemTests.csproj
            test-filter-criteria: ""
            browser-name: 'chromium'
            channel: 'msedge'
            headless: true
          - test-type: SystemTests_Firefox
            artifact-name: tests_InMemorySystemTests
            project-name: NUnit.InProcess.SystemTests
            project-pattern: |
              **/*NUnit.InProcess.SystemTests.csproj
            test-filter-criteria: ""
            browser-name: 'firefox'
            channel: ''
            headless: true
          - test-type: SystemTests_Webkit
            artifact-name: tests_InMemorySystemTests
            project-name: NUnit.InProcess.SystemTests
            project-pattern: |
              **/*NUnit.InProcess.SystemTests.csproj
            test-filter-criteria: ""
            browser-name: 'webkit'
            channel: ''
            headless: true
          - test-type: TestContainersSystemTests_Chrome
            artifact-name: tests_TestContainersSystemTests
            project-name: TestContainersSystemTests
            project-pattern: |
              **/*NUnit.TestContainers.InProcess.SystemTests.csproj
            test-filter-criteria: ""
            browser-name: 'chromium'
            channel: 'chrome'
            headless: true
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run ${{ matrix.test-type }} and Publish Test Results
        uses: ./.github/actions/run-playwright-tests-action
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          test-artifact-name: ${{ matrix.artifact-name }}
          test-project-name: ${{ matrix.project-name }}
          test-project-pattern: |
            ${{ matrix.project-pattern }}
          test-filter-criteria: ${{ matrix.test-filter-criteria }}
          browser-name: ${{ matrix.browser-name }}
          channel: ${{ matrix.channel }}
          headless: ${{ matrix.headless }}

  # run_system_tests-docker:
  #   runs-on: [ubuntu-latest]
  #   timeout-minutes: 20
  #   needs: [ build_solution, build_web_assets, build_tests ]
  #   strategy:
  #     matrix:
  #       include:
  #         - test-type: SystemTests_Chrome
  #           artifact-name: tests_InMemorySystemTests
  #           project-name: DockerSystemTests
  #           project-pattern: |
  #             **/*DockerSystemTests.csproj
  #           test-filter-criteria: ""
  #           browser-name: 'chromium'
  #           channel: 'chrome'
  #           headless: true
    
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Run ${{ matrix.test-type }} and Publish Test Results
  #       uses: ./.github/actions/run-docker-playwright-tests-action
  #       with:
  #         dotnet-version: ${{ env.DOTNET_VERSION }}
  #         test-artifact-name: ${{ matrix.artifact-name }}
  #         test-project-name: ${{ matrix.project-name }}
  #         test-project-pattern: |
  #           ${{ matrix.project-pattern }}
  #         test-filter-criteria: ${{ matrix.test-filter-criteria }}
  #         browser-name: ${{ matrix.browser-name }}
  #         channel: ${{ matrix.channel }}
  #         headless: ${{ matrix.headless }}
  
  publish_service_artifacts:
    needs: [ run_tests]
    runs-on: [ubuntu-latest]
    timeout-minutes: 20
    strategy:
      matrix:
        include:
        - service-name: 'Web'
          project-name: 'Web'
          artifact-name: 'Web'
          dockerfile: src/Web/Dockerfile
          container-image: 'web'
        - service-name: 'PublicApi'
          project-name: 'PublicApi'
          artifact-name: 'PublicApi'
          dockerfile: src/PublicApi/Dockerfile
          container-image: 'publicapi'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Publish Service Artifacts
        uses: ./.github/actions/publish-service-artifacts-action
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          service-name: ${{ matrix.service-name }}
          project-name: ${{ matrix.project-name }}
          artifact-name: ${{ matrix.artifact-name }}
          dockerfile: ${{ matrix.dockerfile }}
